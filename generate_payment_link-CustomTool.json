{
  "name": "generate_payment_link",
  "description": "Genera el enlace de pago para los servicios en el carrito",
  "color": "linear-gradient(rgb(34,112,209), rgb(137,126,63))",
  "iconSrc": null,
  "schema": "[{\"property\":\"conversation_id\",\"type\":\"string\",\"description\":\"ID de la conversación\",\"required\":true},{\"property\":\"user_email\",\"type\":\"string\",\"description\":\"Email del usuario para el proceso de pago\",\"required\":true}]",
  "func": "/*\n* Casalimpia Custom Tool: generate_payment_link\n* Genera enlace de pago para servicios en carrito\n* Variables: $conversation_id, $user_email\n*/\n\nconst generatePaymentLink = async () => {\n  try {\n    const conversationId = $conversation_id || $flow.sessionId;\n    const userEmail = $user_email;\n    \n    // Validar formato de email\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(userEmail)) {\n      return JSON.stringify({\n        success: false,\n        error: 'Invalid email format',\n        message: '❌ Por favor proporciona un email válido (ejemplo: usuario@correo.com)'\n      });\n    }\n    \n    // Si usas API externa de Casalimpia\n    if (process.env.CASALIMPIA_API_BASE && process.env.CASALIMPIA_API_TOKEN) {\n      const response = await fetch(`${process.env.CASALIMPIA_API_BASE}/payment/generate`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${process.env.CASALIMPIA_API_TOKEN}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          conversation_id: conversationId,\n          user_email: userEmail\n        })\n      });\n      \n      if (!response.ok) {\n        throw new Error(`API Error: ${response.status}`);\n      }\n      \n      const paymentData = await response.json();\n      \n      return JSON.stringify({\n        success: true,\n        payment_link: paymentData.payment_url,\n        total_amount: paymentData.total,\n        services_count: paymentData.services_count,\n        message: `✅ *¡Perfecto!* He generado tu enlace de pago.\\n\\n💳 *Total*: $${paymentData.total.toLocaleString()} COP\\n📧 *Email*: ${userEmail}\\n🛍️ *Servicios*: ${paymentData.services_count}\\n\\n👆 Puedes completar la compra de forma segura haciendo clic en el enlace.\\n\\n¡Gracias por elegir Casalimpia! 🧹✨`\n      });\n    }\n    \n    // Simulación para testing sin API\n    const cartItems = $flow.state?.cart_items || [];\n    const mockTotal = 113150 * cartItems.length; // Precio base por servicio\n    const mockPaymentUrl = `https://payment.casalimpia.com/pay/${conversationId}`;\n    \n    return JSON.stringify({\n      success: true,\n      payment_link: mockPaymentUrl,\n      total_amount: mockTotal,\n      services_count: cartItems.length,\n      user_email: userEmail,\n      conversation_id: conversationId,\n      message: `✅ *¡Perfecto!* He generado tu enlace de pago.\\n\\n💳 *Total*: $${mockTotal.toLocaleString()} COP\\n📧 *Email*: ${userEmail}\\n🛍️ *Servicios*: ${cartItems.length}\\n\\n${mockPaymentUrl}\\n\\n👆 Puedes completar la compra de forma segura haciendo clic en el enlace.\\n\\n¡Gracias por elegir Casalimpia! 🧹✨`\n    });\n    \n  } catch (error) {\n    console.error('Error generating payment link:', error);\n    return JSON.stringify({ \n      success: false,\n      error: 'Failed to generate payment link',\n      message: '❌ Error al generar enlace de pago. Intenta nuevamente o contacta a soporte.'\n    });\n  }\n};\n\nconst result = await generatePaymentLink();\nreturn result;",
  "workspaceId": "3d76328e-d825-4824-92e0-dc840f47a68a"
}